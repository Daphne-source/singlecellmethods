// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// exp_mean
MATTYPE exp_mean(const VECTYPE& x, const VECTYPE& p, const VECTYPE& i, int ncol, int nrow, const uvec& groups, const uvec& group_sizes);
RcppExport SEXP _singlecellmethods_exp_mean(SEXP xSEXP, SEXP pSEXP, SEXP iSEXP, SEXP ncolSEXP, SEXP nrowSEXP, SEXP groupsSEXP, SEXP group_sizesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const VECTYPE& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const VECTYPE& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const VECTYPE& >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type group_sizes(group_sizesSEXP);
    rcpp_result_gen = Rcpp::wrap(exp_mean(x, p, i, ncol, nrow, groups, group_sizes));
    return rcpp_result_gen;
END_RCPP
}
// log_vmr
MATTYPE log_vmr(const VECTYPE& x, const VECTYPE& p, const VECTYPE& i, int ncol, int nrow, const MATTYPE& means, const uvec& groups, const uvec& group_sizes);
RcppExport SEXP _singlecellmethods_log_vmr(SEXP xSEXP, SEXP pSEXP, SEXP iSEXP, SEXP ncolSEXP, SEXP nrowSEXP, SEXP meansSEXP, SEXP groupsSEXP, SEXP group_sizesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const VECTYPE& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const VECTYPE& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const VECTYPE& >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< const MATTYPE& >::type means(meansSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< const uvec& >::type group_sizes(group_sizesSEXP);
    rcpp_result_gen = Rcpp::wrap(log_vmr(x, p, i, ncol, nrow, means, groups, group_sizes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_singlecellmethods_exp_mean", (DL_FUNC) &_singlecellmethods_exp_mean, 7},
    {"_singlecellmethods_log_vmr", (DL_FUNC) &_singlecellmethods_log_vmr, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_singlecellmethods(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
